package com.broadengate.vcms.entity;

// default package
// Generated 2009-7-15 10:27:13 by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * VideoInfo generated by hbm2java
 */
@Entity
@Table(name = "video_info", catalog = "vcms")
public class VideoInfo implements java.io.Serializable {

	private Integer videoId;
	private UserInfo userInfo;
	private String videoName;
	private Date createTime;
	private String fileName;
	private String fileFormat;
	private String filePath;
	private Double fileSize;
	private String imageName;
	private String imagePath;
	private String timeCount;
	private Integer timeSecond;
	private String descn;
	private Set<Keyword> keywords = new HashSet<Keyword>(0);
	private Set<VideoType> videoTypes = new HashSet<VideoType>(0);
	private Set<PlayListShip> playListShips = new HashSet<PlayListShip>(0);
	private Set<VideoAlbumShip> videoAlbumShips = new HashSet<VideoAlbumShip>(0);

	public VideoInfo() {
	}

	public VideoInfo(Double fileSize, String imageName, String imagePath,
			String timeCount,Integer timeSecond) {
		this.fileSize = fileSize;
		this.imageName = imageName;
		this.imagePath = imagePath;
		this.timeCount = timeCount;
		this.timeSecond = timeSecond;
	}

	public VideoInfo(UserInfo userInfo, String videoName, Date createTime,
			String fileName,String fileFormat, String filePath, Double fileSize, String imageName,
			String imagePath, String timeCount, Integer timeSecond, String descn,
			Set<Keyword> keywords, Set<VideoType> videoTypes,
			Set<PlayListShip> playListShips, Set<VideoAlbumShip> videoAlbumShips) {
		this.userInfo = userInfo;
		this.videoName = videoName;
		this.createTime = createTime;
		this.fileName = fileName;
		this.fileFormat =fileFormat;
		this.filePath = filePath;
		this.fileSize = fileSize;
		this.imageName = imageName;
		this.imagePath = imagePath;
		this.timeCount = timeCount;
		this.timeSecond = timeSecond;
		this.descn = descn;
		this.keywords = keywords;
		this.videoTypes = videoTypes;
		this.playListShips = playListShips;
		this.videoAlbumShips = videoAlbumShips;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "VIDEO_ID", unique = true, nullable = false)
	public Integer getVideoId() {
		return this.videoId;
	}

	public void setVideoId(Integer videoId) {
		this.videoId = videoId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "USER_ID")
	public UserInfo getUserInfo() {
		return this.userInfo;
	}

	public void setUserInfo(UserInfo userInfo) {
		this.userInfo = userInfo;
	}

	@Column(name = "VIDEO_NAME", length = 128)
	public String getVideoName() {
		return this.videoName;
	}

	public void setVideoName(String videoName) {
		this.videoName = videoName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_TIME", length = 0)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "FILE_NAME", length = 128)
	public String getFileName() {
		return this.fileName;
	}
	
	public void setFileName(String fileName) {
		this.fileName = fileName;
	}
	
	@Column(name = "FILE_FORMAT", length = 32)
	public String getFileFormat() {
		return this.fileFormat;
	}
	
	public void setFileFormat(String fileFormat){
		this.fileFormat = fileFormat;
	}

	@Column(name = "FILE_PATH")
	public String getFilePath() {
		return this.filePath;
	}

	public void setFilePath(String filePath) {
		this.filePath = filePath;
	}

	@Column(name = "FILE_SIZE", nullable = false)
	public Double getFileSize() {
		return this.fileSize;
	}

	public void setFileSize(Double d) {
		this.fileSize = d;
	}

	@Column(name = "IMAGE_NAME", nullable = false, length = 128)
	public String getImageName() {
		return this.imageName;
	}

	public void setImageName(String imageName) {
		this.imageName = imageName;
	}

	@Column(name = "IMAGE_PATH", nullable = false)
	public String getImagePath() {
		return this.imagePath;
	}

	public void setImagePath(String imagePath) {
		this.imagePath = imagePath;
	}

	@Column(name = "TIME_COUNT", nullable = false)
	public String getTimeCount() {
		return this.timeCount;
	}
	

	public void setTimeCount(String timeCount) {
		this.timeCount = timeCount;
	}
	
	@Column(name = "TIME_SECOND", nullable = false)
	public Integer getTimeSecond() {
		return this.timeSecond;
	}
	
	public void setTimeSecond(Integer timeSecond)
	{
		this.timeSecond = timeSecond;
	}

	@Column(name = "DESCN", length = 2000)
	public String getDescn() {
		return this.descn;
	}

	public void setDescn(String descn) {
		this.descn = descn;
	}

	@ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)
	@Fetch(FetchMode.SELECT)
	@JoinTable(name = "video_keyword_ship", catalog = "vcms", joinColumns = { @JoinColumn(name = "VIDEO_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "WORD_ID", nullable = false, updatable = false) })
	public Set<Keyword> getKeywords() {
		return this.keywords;
	}

	public void setKeywords(Set<Keyword> keywords) {
		this.keywords = keywords;
	}

	@ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "videoInfos")
	@Fetch(FetchMode.SELECT)
	public Set<VideoType> getVideoTypes() {
		return this.videoTypes;
	}

	public void setVideoTypes(Set<VideoType> videoTypes) {
		this.videoTypes = videoTypes;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "videoInfo")
	@Fetch(FetchMode.SELECT)
	public Set<PlayListShip> getPlayListShips() {
		return this.playListShips;
	}

	public void setPlayListShips(Set<PlayListShip> playListShips) {
		this.playListShips = playListShips;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "videoInfo")
	@Fetch(FetchMode.SELECT)
	public Set<VideoAlbumShip> getVideoAlbumShips() {
		return this.videoAlbumShips;
	}

	public void setVideoAlbumShips(Set<VideoAlbumShip> videoAlbumShips) {
		this.videoAlbumShips = videoAlbumShips;
	}

}
